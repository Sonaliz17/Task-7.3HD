{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandr\\\\OneDrive\\\\Desktop\\\\Sem2\\\\Project\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, Button, TextField, List, ListItem, ListItemText, Paper, Box, IconButton, Checkbox } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:5000/api';\nconst App = () => {\n  _s();\n  const [boards, setBoards] = useState([]);\n  const [token, setToken] = useState('');\n  const [boardName, setBoardName] = useState('');\n  const [taskText, setTaskText] = useState('');\n  const [selectedBoard, setSelectedBoard] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [mode, setMode] = useState('login');\n  const headers = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const register = async () => {\n    try {\n      await axios.post(`${API_BASE}/auth/register`, {\n        email,\n        password\n      });\n      alert(\"Registered. You can now login.\");\n      setMode(\"login\");\n    } catch {\n      alert(\"Registration failed\");\n    }\n  };\n  const login = async () => {\n    try {\n      const res = await axios.post(`${API_BASE}/auth/login`, {\n        email,\n        password\n      });\n      setToken(res.data.token);\n    } catch {\n      alert(\"Login failed\");\n    }\n  };\n  const logout = () => {\n    setToken('');\n    setBoards([]);\n    setTasks([]);\n    setSelectedBoard(null);\n  };\n  const loadBoards = async () => {\n    const res = await axios.get(`${API_BASE}/boards`, headers);\n    setBoards(res.data);\n  };\n  const loadTasks = async boardId => {\n    const res = await axios.get(`${API_BASE}/boards/${boardId}/tasks`, headers);\n    setTasks(res.data);\n    setSelectedBoard(boardId);\n  };\n  const addBoard = async () => {\n    if (!boardName.trim()) return;\n    await axios.post(`${API_BASE}/boards`, {\n      name: boardName\n    }, headers);\n    setBoardName('');\n    loadBoards();\n  };\n  const addTask = async () => {\n    if (!taskText.trim() || !selectedBoard) return;\n    await axios.post(`${API_BASE}/boards/${selectedBoard}/tasks`, {\n      text: taskText\n    }, headers);\n    setTaskText('');\n    loadTasks(selectedBoard);\n  };\n  const deleteTask = async taskId => {\n    await axios.delete(`${API_BASE}/boards/${selectedBoard}/tasks/${taskId}`, headers);\n    loadTasks(selectedBoard);\n  };\n  const toggleTask = async task => {\n    await axios.put(`${API_BASE}/boards/${selectedBoard}/tasks/${task._id}`, {\n      completed: !task.completed\n    }, headers);\n    loadTasks(selectedBoard);\n  };\n  useEffect(() => {\n    if (token) loadBoards();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"Task Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), !token ? /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: 2,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), mode === 'login' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setMode('register'),\n          children: \"No account? Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: register,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setMode('login'),\n          children: \"Already registered? Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 2,\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"New Board\",\n          value: boardName,\n          onChange: e => setBoardName(e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: addBoard,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          mt: 2,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Your Boards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: boards.map(board => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => loadTasks(board._id),\n            selected: selectedBoard === board._id,\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: board.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)\n          }, board._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), selectedBoard && /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          mt: 3,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          gap: 2,\n          mt: 1,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"New Task\",\n            value: taskText,\n            onChange: e => setTaskText(e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: addTask,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n            secondaryAction: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => deleteTask(task._id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 7\n            }, this),\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: task.completed,\n              onChange: () => toggleTask(task)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"standard\",\n              value: task.text,\n              onChange: e => updateTask(task._id, e.target.value),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 5\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 3\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wFGg/8vzUnWFlUqYg3v/EG2Rlt8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Typography","Button","TextField","List","ListItem","ListItemText","Paper","Box","IconButton","Checkbox","DeleteIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","App","_s","boards","setBoards","token","setToken","boardName","setBoardName","taskText","setTaskText","selectedBoard","setSelectedBoard","tasks","setTasks","email","setEmail","password","setPassword","mode","setMode","headers","Authorization","register","post","alert","login","res","data","logout","loadBoards","get","loadTasks","boardId","addBoard","trim","name","addTask","text","deleteTask","taskId","delete","toggleTask","task","put","_id","completed","maxWidth","sx","mt","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","label","value","onChange","e","target","type","onClick","fullWidth","elevation","p","map","board","button","selected","primary","secondaryAction","checked","updateTask","_c","$RefreshReg$"],"sources":["C:/Users/sandr/OneDrive/Desktop/Sem2/Project/Frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container, Typography, Button, TextField, List, ListItem, ListItemText,\r\n  Paper, Box, IconButton, Checkbox\r\n} from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nconst API_BASE = 'http://localhost:5000/api';\r\n\r\nconst App = () => {\r\n  const [boards, setBoards] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [boardName, setBoardName] = useState('');\r\n  const [taskText, setTaskText] = useState('');\r\n  const [selectedBoard, setSelectedBoard] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [mode, setMode] = useState('login');\r\n\r\n  const headers = { headers: { Authorization: `Bearer ${token}` } };\r\n\r\n  const register = async () => {\r\n    try {\r\n      await axios.post(`${API_BASE}/auth/register`, { email, password });\r\n      alert(\"Registered. You can now login.\");\r\n      setMode(\"login\");\r\n    } catch {\r\n      alert(\"Registration failed\");\r\n    }\r\n  };\r\n\r\n  const login = async () => {\r\n    try {\r\n      const res = await axios.post(`${API_BASE}/auth/login`, { email, password });\r\n      setToken(res.data.token);\r\n    } catch {\r\n      alert(\"Login failed\");\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken('');\r\n    setBoards([]);\r\n    setTasks([]);\r\n    setSelectedBoard(null);\r\n  };\r\n\r\n  const loadBoards = async () => {\r\n    const res = await axios.get(`${API_BASE}/boards`, headers);\r\n    setBoards(res.data);\r\n  };\r\n\r\n  const loadTasks = async (boardId) => {\r\n    const res = await axios.get(`${API_BASE}/boards/${boardId}/tasks`, headers);\r\n    setTasks(res.data);\r\n    setSelectedBoard(boardId);\r\n  };\r\n\r\n  const addBoard = async () => {\r\n    if (!boardName.trim()) return;\r\n    await axios.post(`${API_BASE}/boards`, { name: boardName }, headers);\r\n    setBoardName('');\r\n    loadBoards();\r\n  };\r\n\r\n  const addTask = async () => {\r\n    if (!taskText.trim() || !selectedBoard) return;\r\n    await axios.post(`${API_BASE}/boards/${selectedBoard}/tasks`, { text: taskText }, headers);\r\n    setTaskText('');\r\n    loadTasks(selectedBoard);\r\n  };\r\n\r\n  const deleteTask = async (taskId) => {\r\n    await axios.delete(`${API_BASE}/boards/${selectedBoard}/tasks/${taskId}`, headers);\r\n    loadTasks(selectedBoard);\r\n  };\r\n\r\n  const toggleTask = async (task) => {\r\n    await axios.put(`${API_BASE}/boards/${selectedBoard}/tasks/${task._id}`, {\r\n      completed: !task.completed\r\n    }, headers);\r\n    loadTasks(selectedBoard);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) loadBoards();\r\n  }, [token]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\r\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>Task Board</Typography>\r\n\r\n      {!token ? (\r\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\r\n          <TextField label=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          <TextField label=\"Password\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n          {mode === 'login' ? (\r\n            <>\r\n              <Button variant=\"contained\" onClick={login}>Login</Button>\r\n              <Button onClick={() => setMode('register')}>No account? Register</Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button variant=\"contained\" onClick={register}>Register</Button>\r\n              <Button onClick={() => setMode('login')}>Already registered? Login</Button>\r\n            </>\r\n          )}\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Button variant=\"outlined\" onClick={logout}>Logout</Button>\r\n\r\n          <Box display=\"flex\" gap={2} mt={3}>\r\n            <TextField label=\"New Board\" value={boardName} onChange={(e) => setBoardName(e.target.value)} fullWidth />\r\n            <Button variant=\"contained\" onClick={addBoard}>Add</Button>\r\n          </Box>\r\n\r\n          <Paper elevation={3} sx={{ mt: 2, p: 2 }}>\r\n            <Typography variant=\"h6\">Your Boards</Typography>\r\n            <List>\r\n              {boards.map((board) => (\r\n                <ListItem\r\n                  button key={board._id}\r\n                  onClick={() => loadTasks(board._id)}\r\n                  selected={selectedBoard === board._id}\r\n                >\r\n                  <ListItemText primary={board.name} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Paper>\r\n\r\n          {selectedBoard && (\r\n            <Paper elevation={3} sx={{ mt: 3, p: 2 }}>\r\n              <Typography variant=\"h6\">Tasks</Typography>\r\n              <Box display=\"flex\" gap={2} mt={1}>\r\n                <TextField label=\"New Task\" value={taskText} onChange={(e) => setTaskText(e.target.value)} fullWidth />\r\n                <Button variant=\"contained\" onClick={addTask}>Add</Button>\r\n              </Box>\r\n              <List>\r\n                {tasks.map((task) => (\r\n  <ListItem\r\n    key={task._id}\r\n    secondaryAction={\r\n      <Box>\r\n        <IconButton onClick={() => deleteTask(task._id)}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Box>\r\n    }\r\n  >\r\n    <Checkbox\r\n      checked={task.completed}\r\n      onChange={() => toggleTask(task)}\r\n    />\r\n    <TextField\r\n      variant=\"standard\"\r\n      value={task.text}\r\n      onChange={(e) => updateTask(task._id, e.target.value)}\r\n      fullWidth\r\n    />\r\n  </ListItem>\r\n))}\r\n              </List>\r\n            </Paper>\r\n          )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EACtEC,KAAK,EAAEC,GAAG,EAAEC,UAAU,EAAEC,QAAQ,QAC3B,eAAe;AACtB,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,QAAQ,GAAG,2BAA2B;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqC,IAAI,EAAEC,OAAO,CAAC,GAAGtC,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMuC,OAAO,GAAG;IAAEA,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUjB,KAAK;IAAG;EAAE,CAAC;EAEjE,MAAMkB,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMxC,KAAK,CAACyC,IAAI,CAAC,GAAGxB,QAAQ,gBAAgB,EAAE;QAAEe,KAAK;QAAEE;MAAS,CAAC,CAAC;MAClEQ,KAAK,CAAC,gCAAgC,CAAC;MACvCL,OAAO,CAAC,OAAO,CAAC;IAClB,CAAC,CAAC,MAAM;MACNK,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAM5C,KAAK,CAACyC,IAAI,CAAC,GAAGxB,QAAQ,aAAa,EAAE;QAAEe,KAAK;QAAEE;MAAS,CAAC,CAAC;MAC3EX,QAAQ,CAACqB,GAAG,CAACC,IAAI,CAACvB,KAAK,CAAC;IAC1B,CAAC,CAAC,MAAM;MACNoB,KAAK,CAAC,cAAc,CAAC;IACvB;EACF,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBvB,QAAQ,CAAC,EAAE,CAAC;IACZF,SAAS,CAAC,EAAE,CAAC;IACbU,QAAQ,CAAC,EAAE,CAAC;IACZF,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMH,GAAG,GAAG,MAAM5C,KAAK,CAACgD,GAAG,CAAC,GAAG/B,QAAQ,SAAS,EAAEqB,OAAO,CAAC;IAC1DjB,SAAS,CAACuB,GAAG,CAACC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMI,SAAS,GAAG,MAAOC,OAAO,IAAK;IACnC,MAAMN,GAAG,GAAG,MAAM5C,KAAK,CAACgD,GAAG,CAAC,GAAG/B,QAAQ,WAAWiC,OAAO,QAAQ,EAAEZ,OAAO,CAAC;IAC3EP,QAAQ,CAACa,GAAG,CAACC,IAAI,CAAC;IAClBhB,gBAAgB,CAACqB,OAAO,CAAC;EAC3B,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAAC3B,SAAS,CAAC4B,IAAI,CAAC,CAAC,EAAE;IACvB,MAAMpD,KAAK,CAACyC,IAAI,CAAC,GAAGxB,QAAQ,SAAS,EAAE;MAAEoC,IAAI,EAAE7B;IAAU,CAAC,EAAEc,OAAO,CAAC;IACpEb,YAAY,CAAC,EAAE,CAAC;IAChBsB,UAAU,CAAC,CAAC;EACd,CAAC;EAED,MAAMO,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI,CAAC5B,QAAQ,CAAC0B,IAAI,CAAC,CAAC,IAAI,CAACxB,aAAa,EAAE;IACxC,MAAM5B,KAAK,CAACyC,IAAI,CAAC,GAAGxB,QAAQ,WAAWW,aAAa,QAAQ,EAAE;MAAE2B,IAAI,EAAE7B;IAAS,CAAC,EAAEY,OAAO,CAAC;IAC1FX,WAAW,CAAC,EAAE,CAAC;IACfsB,SAAS,CAACrB,aAAa,CAAC;EAC1B,CAAC;EAED,MAAM4B,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,MAAMzD,KAAK,CAAC0D,MAAM,CAAC,GAAGzC,QAAQ,WAAWW,aAAa,UAAU6B,MAAM,EAAE,EAAEnB,OAAO,CAAC;IAClFW,SAAS,CAACrB,aAAa,CAAC;EAC1B,CAAC;EAED,MAAM+B,UAAU,GAAG,MAAOC,IAAI,IAAK;IACjC,MAAM5D,KAAK,CAAC6D,GAAG,CAAC,GAAG5C,QAAQ,WAAWW,aAAa,UAAUgC,IAAI,CAACE,GAAG,EAAE,EAAE;MACvEC,SAAS,EAAE,CAACH,IAAI,CAACG;IACnB,CAAC,EAAEzB,OAAO,CAAC;IACXW,SAAS,CAACrB,aAAa,CAAC;EAC1B,CAAC;EAED9B,SAAS,CAAC,MAAM;IACd,IAAIwB,KAAK,EAAEyB,UAAU,CAAC,CAAC;EACzB,CAAC,EAAE,CAACzB,KAAK,CAAC,CAAC;EAEX,oBACER,OAAA,CAACb,SAAS;IAAC+D,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACrCrD,OAAA,CAACZ,UAAU;MAACkE,OAAO,EAAC,IAAI;MAACC,KAAK,EAAC,QAAQ;MAACC,YAAY;MAAAH,QAAA,EAAC;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EAE3E,CAACpD,KAAK,gBACLR,OAAA,CAACL,GAAG;MAACkE,OAAO,EAAC,MAAM;MAACC,aAAa,EAAC,QAAQ;MAACC,GAAG,EAAE,CAAE;MAAAV,QAAA,gBAChDrD,OAAA,CAACV,SAAS;QAAC0E,KAAK,EAAC,OAAO;QAACC,KAAK,EAAE/C,KAAM;QAACgD,QAAQ,EAAGC,CAAC,IAAKhD,QAAQ,CAACgD,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpF5D,OAAA,CAACV,SAAS;QAAC0E,KAAK,EAAC,UAAU;QAACK,IAAI,EAAC,UAAU;QAACJ,KAAK,EAAE7C,QAAS;QAAC8C,QAAQ,EAAGC,CAAC,IAAK9C,WAAW,CAAC8C,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5GtC,IAAI,KAAK,OAAO,gBACftB,OAAA,CAAAE,SAAA;QAAAmD,QAAA,gBACErD,OAAA,CAACX,MAAM;UAACiE,OAAO,EAAC,WAAW;UAACgB,OAAO,EAAEzC,KAAM;UAAAwB,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1D5D,OAAA,CAACX,MAAM;UAACiF,OAAO,EAAEA,CAAA,KAAM/C,OAAO,CAAC,UAAU,CAAE;UAAA8B,QAAA,EAAC;QAAoB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eACzE,CAAC,gBAEH5D,OAAA,CAAAE,SAAA;QAAAmD,QAAA,gBACErD,OAAA,CAACX,MAAM;UAACiE,OAAO,EAAC,WAAW;UAACgB,OAAO,EAAE5C,QAAS;UAAA2B,QAAA,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChE5D,OAAA,CAACX,MAAM;UAACiF,OAAO,EAAEA,CAAA,KAAM/C,OAAO,CAAC,OAAO,CAAE;UAAA8B,QAAA,EAAC;QAAyB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eAC3E,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,gBAEN5D,OAAA,CAAAE,SAAA;MAAAmD,QAAA,gBACErD,OAAA,CAACX,MAAM;QAACiE,OAAO,EAAC,UAAU;QAACgB,OAAO,EAAEtC,MAAO;QAAAqB,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAE3D5D,OAAA,CAACL,GAAG;QAACkE,OAAO,EAAC,MAAM;QAACE,GAAG,EAAE,CAAE;QAACX,EAAE,EAAE,CAAE;QAAAC,QAAA,gBAChCrD,OAAA,CAACV,SAAS;UAAC0E,KAAK,EAAC,WAAW;UAACC,KAAK,EAAEvD,SAAU;UAACwD,QAAQ,EAAGC,CAAC,IAAKxD,YAAY,CAACwD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACM,SAAS;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1G5D,OAAA,CAACX,MAAM;UAACiE,OAAO,EAAC,WAAW;UAACgB,OAAO,EAAEjC,QAAS;UAAAgB,QAAA,EAAC;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC,eAEN5D,OAAA,CAACN,KAAK;QAAC8E,SAAS,EAAE,CAAE;QAACrB,EAAE,EAAE;UAAEC,EAAE,EAAE,CAAC;UAAEqB,CAAC,EAAE;QAAE,CAAE;QAAApB,QAAA,gBACvCrD,OAAA,CAACZ,UAAU;UAACkE,OAAO,EAAC,IAAI;UAAAD,QAAA,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACjD5D,OAAA,CAACT,IAAI;UAAA8D,QAAA,EACF/C,MAAM,CAACoE,GAAG,CAAEC,KAAK,iBAChB3E,OAAA,CAACR,QAAQ;YACPoF,MAAM;YACNN,OAAO,EAAEA,CAAA,KAAMnC,SAAS,CAACwC,KAAK,CAAC3B,GAAG,CAAE;YACpC6B,QAAQ,EAAE/D,aAAa,KAAK6D,KAAK,CAAC3B,GAAI;YAAAK,QAAA,eAEtCrD,OAAA,CAACP,YAAY;cAACqF,OAAO,EAAEH,KAAK,CAACpC;YAAK;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC,GAJzBe,KAAK,CAAC3B,GAAG;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKb,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,EAEP9C,aAAa,iBACZd,OAAA,CAACN,KAAK;QAAC8E,SAAS,EAAE,CAAE;QAACrB,EAAE,EAAE;UAAEC,EAAE,EAAE,CAAC;UAAEqB,CAAC,EAAE;QAAE,CAAE;QAAApB,QAAA,gBACvCrD,OAAA,CAACZ,UAAU;UAACkE,OAAO,EAAC,IAAI;UAAAD,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC3C5D,OAAA,CAACL,GAAG;UAACkE,OAAO,EAAC,MAAM;UAACE,GAAG,EAAE,CAAE;UAACX,EAAE,EAAE,CAAE;UAAAC,QAAA,gBAChCrD,OAAA,CAACV,SAAS;YAAC0E,KAAK,EAAC,UAAU;YAACC,KAAK,EAAErD,QAAS;YAACsD,QAAQ,EAAGC,CAAC,IAAKtD,WAAW,CAACsD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAACM,SAAS;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvG5D,OAAA,CAACX,MAAM;YAACiE,OAAO,EAAC,WAAW;YAACgB,OAAO,EAAE9B,OAAQ;YAAAa,QAAA,EAAC;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eACN5D,OAAA,CAACT,IAAI;UAAA8D,QAAA,EACFrC,KAAK,CAAC0D,GAAG,CAAE5B,IAAI,iBAC9B9C,OAAA,CAACR,QAAQ;YAEPuF,eAAe,eACb/E,OAAA,CAACL,GAAG;cAAA0D,QAAA,eACFrD,OAAA,CAACJ,UAAU;gBAAC0E,OAAO,EAAEA,CAAA,KAAM5B,UAAU,CAACI,IAAI,CAACE,GAAG,CAAE;gBAAAK,QAAA,eAC9CrD,OAAA,CAACF,UAAU;kBAAA2D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CACN;YAAAP,QAAA,gBAEDrD,OAAA,CAACH,QAAQ;cACPmF,OAAO,EAAElC,IAAI,CAACG,SAAU;cACxBiB,QAAQ,EAAEA,CAAA,KAAMrB,UAAU,CAACC,IAAI;YAAE;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eACF5D,OAAA,CAACV,SAAS;cACRgE,OAAO,EAAC,UAAU;cAClBW,KAAK,EAAEnB,IAAI,CAACL,IAAK;cACjByB,QAAQ,EAAGC,CAAC,IAAKc,UAAU,CAACnC,IAAI,CAACE,GAAG,EAAEmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cACtDM,SAAS;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA,GAlBGd,IAAI,CAACE,GAAG;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBL,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACkB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACR;IAAA,eACD,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAACvD,EAAA,CAlKID,GAAG;AAAA8E,EAAA,GAAH9E,GAAG;AAoKT,eAAeA,GAAG;AAAC,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}